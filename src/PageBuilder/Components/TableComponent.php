<?php

namespace Cubetech\PageBuilder\Components;

use Cubetech\Theme;
use Cubetech\Cards\StandardCard;

/**
 * Component for displaying a table (HTML tabale)
 * This components scss file comes with an already optimized
 * version for the mobile where the table rows break into a
 * block with the title displayed inside the corresponding field
 *
 * @author Marc Mentha <marc@cubetech.ch>
 * @version 1.0.0
 * @since 1.0.0
 */
class TableComponent extends BaseComponent
{
    
    /**
     * Title of this component
     * Generated by acf singleline filed
     *
     * @var string
     */
    protected $title;
    
    /**
     * Constructor method for this component
     * Initializes title, and table rows aswell as the table header
     *
     *
     * @param int $index
     *
     * @author Marc Mentha <marc@cubetech.ch>
     * @since 1.0.0
     */
    public function __construct($index, $containerClass)
    {
        parent::__construct('Table', $index, $containerClass);
        
        $this->title = $this->getComponentField('table_title');
        $this->columnCount = (int)$this->getComponentField('column_count');
        $this->tableTitles = [];
        $tableRowSubfields = [];
        for ($i = 1; $i <= $this->columnCount; $i++) {
            $this->tableTitles[] = $this->getComponentField('table_title_column_' . $i);
            $tableRowSubfields[] = 'column_' . $i;
        }
        
        $this->tableRows = $this->getComponentRepeaterField('table_rows', $tableRowSubfields);
    }
    
    /**
     * Renders all readable contents of this component as a string
     *
     * @return string
     *
     * @author Alex Scherer <alex.scherer@cubetech.ch>
     * @since 1.0.0
     */
    public function renderToString()
    {
        $returnString = $this->title . ' ';
        
        if (count($this->tableTitles) > 0) {
            foreach ($this->tableTitles as $title) {
                $returnString .= $title . ' ';
            }
        }
        
        if (count($this->tableRows) > 0) {
            $index = 1;
            foreach ($this->tableRows as $row) {
                foreach ($row as $entry) {
                    $returnString .= ' ' . $entry;
                }
            }
        }
        return $returnString;
    }
    
    /**
     * Validates the component for this particular component
     *
     * For this component it's necsessary to have post so we check only for this->posts
     *
     * @return boolean
     *
     * @author Marc Mentha <marc@cubetech.ch>
     * @since 1.0.0
     */
    public function isValid()
    {
        return count($this->tableRows) > 0;
    }
}